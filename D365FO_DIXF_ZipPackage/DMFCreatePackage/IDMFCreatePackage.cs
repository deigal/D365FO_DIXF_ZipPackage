// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace D365FO_DIXF_ZipPackage
{
    using System;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;
    using Newtonsoft.Json;
    using Microsoft.Rest;

    /// <summary>
    /// Import from "DMFCreatePackage" Function App
    /// </summary>
    public partial interface IDMFCreatePackage : IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }

        /// <summary>
        /// Subscription credentials which uniquely identify client
        /// subscription.
        /// </summary>
        ServiceClientCredentials Credentials { get; }


            /// <summary>
        /// D365FO_DIXF_ZipPackage
        /// </summary>
        /// This function compresses files inside a folder
        /// &lt;pathToArchive&gt; to a ZIP-archive &lt;pathToArchive.zip&gt;
        /// and places it  into the folder &lt;pathToArchive&gt;. The value
        /// returned  is the relative path to the ZIP-archive inside the BLOB
        /// container: &lt;pathToArchive&gt;/&lt;pathToArchive.zip&gt;
        /// <param name='bLOBContainer'>
        /// Name of BLOB container in the specified Azure Storage Account
        /// </param>
        /// <param name='pathToArchive'>
        /// Name of folder to be archived inside the BLOB container
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> PostD365foDixfZippackageWithHttpMessagesAsync(string bLOBContainer, string pathToArchive, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// D365FO_DIXF_ZipPackage
        /// </summary>
        /// This function compresses files inside a folder
        /// &lt;pathToArchive&gt; to a ZIP-archive &lt;pathToArchive.zip&gt;
        /// and places it  into the folder &lt;pathToArchive&gt;. The value
        /// returned  is the relative path to the ZIP-archive inside the BLOB
        /// container: &lt;pathToArchive&gt;/&lt;pathToArchive.zip&gt;
        /// <param name='bLOBContainer'>
        /// Name of BLOB container in the specified Azure Storage Account
        /// </param>
        /// <param name='pathToArchive'>
        /// Name of folder to be archived inside the BLOB container
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> GetD365foDixfZippackageWithHttpMessagesAsync(string bLOBContainer, string pathToArchive, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
